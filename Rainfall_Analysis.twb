<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Rainfall_Analysis_16879502760800' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='10' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Bahnschrift Light' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='cleaned_data3' inline='true' name='federated.028d02108d459a1g752q707z74im' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_data3' name='textscan.1jklqio1tj55tu1acgdl90gq22j0'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Ronit Kumar Purohit/OneDrive - iitkgp.ac.in/Desktop/Certifications/Untitled Folder/cleaned_data3.csv' dataRefreshTime='' directory='C:/Users/Ronit Kumar Purohit/OneDrive - iitkgp.ac.in/Desktop/Certifications/Untitled Folder' filename='C:/Users/Ronit Kumar Purohit/AppData/Local/Temp/TableauTemp/0g3zjis006244w1erw5a00x6cuyl/cleaned_data3.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='IND_adm1' name='ogrdirect.004ay9s1hkca3r1576igt023ahxv'>
            <connection class='ogrdirect' directory='C:/Users/Ronit Kumar Purohit/OneDrive - iitkgp.ac.in/Desktop/Certifications/Untitled Folder/shape' filename='IND_adm1.shp' password='' server='' tablename='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jklqio1tj55tu1acgdl90gq22j0' name='cleaned_data3.csv' table='[C:\Users\Ronit Kumar Purohit\OneDrive - iitkgp.ac.in\Desktop\Certifications\Untitled Folder\cleaned_data3#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:Q4188:no:A1:Q4188:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Unnamed: 0' ordinal='0' />
            <column datatype='string' name='States/UTs' ordinal='1' />
            <column datatype='integer' name='YEAR' ordinal='2' />
            <column datatype='real' name='JAN' ordinal='3' />
            <column datatype='real' name='FEB' ordinal='4' />
            <column datatype='real' name='MAR' ordinal='5' />
            <column datatype='real' name='APR' ordinal='6' />
            <column datatype='real' name='MAY' ordinal='7' />
            <column datatype='real' name='JUN' ordinal='8' />
            <column datatype='real' name='JUL' ordinal='9' />
            <column datatype='real' name='AUG' ordinal='10' />
            <column datatype='real' name='SEP' ordinal='11' />
            <column datatype='real' name='OCT' ordinal='12' />
            <column datatype='real' name='NOV' ordinal='13' />
            <column datatype='real' name='DEC' ordinal='14' />
            <column datatype='real' name='ANNUAL' ordinal='15' />
            <column datatype='string' name='ShapeFile State' ordinal='16' />
            <column datatype='real' name='Annual_Rainfall' ordinal='17' />
            <column datatype='real' name='Rain_Deficit' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jklqio1tj55tu1acgdl90gq22j0' name='cleaned_data3.csv' table='[C:\Users\Ronit Kumar Purohit\OneDrive - iitkgp.ac.in\Desktop\Certifications\Untitled Folder\cleaned_data3#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:Q4188:no:A1:Q4188:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Unnamed: 0' ordinal='0' />
            <column datatype='string' name='States/UTs' ordinal='1' />
            <column datatype='integer' name='YEAR' ordinal='2' />
            <column datatype='real' name='JAN' ordinal='3' />
            <column datatype='real' name='FEB' ordinal='4' />
            <column datatype='real' name='MAR' ordinal='5' />
            <column datatype='real' name='APR' ordinal='6' />
            <column datatype='real' name='MAY' ordinal='7' />
            <column datatype='real' name='JUN' ordinal='8' />
            <column datatype='real' name='JUL' ordinal='9' />
            <column datatype='real' name='AUG' ordinal='10' />
            <column datatype='real' name='SEP' ordinal='11' />
            <column datatype='real' name='OCT' ordinal='12' />
            <column datatype='real' name='NOV' ordinal='13' />
            <column datatype='real' name='DEC' ordinal='14' />
            <column datatype='real' name='ANNUAL' ordinal='15' />
            <column datatype='string' name='ShapeFile State' ordinal='16' />
            <column datatype='real' name='Annual_Rainfall' ordinal='17' />
            <column datatype='real' name='Rain_Deficit' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q4188:no:A1:Q4188:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States/UTs</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States/UTs]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>States/UTs</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JAN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[JAN]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>JAN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FEB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FEB]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>FEB</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MAR]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>MAR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[APR]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>APR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MAY]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>MAY</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JUN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[JUN]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>JUN</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JUL</remote-name>
            <remote-type>5</remote-type>
            <local-name>[JUL]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>JUL</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AUG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AUG]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>AUG</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SEP]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>SEP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OCT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OCT]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>OCT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOV]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>NOV</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEC]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>DEC</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANNUAL</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ANNUAL]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>ANNUAL</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShapeFile State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShapeFile State]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>ShapeFile State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_Rainfall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual_Rainfall]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>Annual_Rainfall</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rain_Deficit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rain_Deficit]</local-name>
            <parent-name>[cleaned_data3.csv]</parent-name>
            <remote-alias>Rain_Deficit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;' value='APR' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;' value='AUG' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;' value='DEC' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;' value='FEB' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;' value='JAN' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;' value='JUL' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;' value='JUN' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;' value='MAR' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;' value='MAY' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;' value='NOV' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;' value='OCT' />
          <alias key='&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;' value='SEP' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
      <column datatype='real' name='[APR]' role='measure' type='quantitative' />
      <column datatype='real' name='[AUG]' role='measure' type='quantitative' />
      <column caption='Winter' datatype='real' name='[Calculation_1112389149791563777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([JAN]+[DEC])' />
      </column>
      <column caption='Spring' datatype='real' name='[Calculation_1112389149791858690]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([FEB]+[MAR])' />
      </column>
      <column caption='Summer' datatype='real' name='[Calculation_1112389149791944707]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG ([APR]+[JUN])' />
      </column>
      <column caption='Monsoon' datatype='real' name='[Calculation_1112389149792043012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([JUL]+[AUG])' />
      </column>
      <column caption='Autumn' datatype='real' name='[Calculation_1112389149792194565]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([SEP]+[OCT]+[NOV])' />
      </column>
      <column caption='MONTHLY_TOTAL' datatype='real' name='[Calculation_1112389149818568710]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(([JAN]+[FEB]+[MAR]+[APR]+[MAY]+[JUN]+[JUL]+[AUG]+[SEP]+[OCT]+[NOV]+[DEC]))' />
      </column>
      <column caption='TOTAL RAIN' datatype='real' name='[Calculation_1806787917396619268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ANNUAL])' />
      </column>
      <column caption='Deficit' datatype='real' name='[Calculation_1806787917399199749]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='10000000000000 * [Rain_Deficit]' />
      </column>
      <column datatype='real' name='[DEC]' role='measure' type='quantitative' />
      <column datatype='real' name='[FEB]' role='measure' type='quantitative' />
      <column datatype='real' name='[JAN]' role='measure' type='quantitative' />
      <column datatype='real' name='[JUL]' role='measure' type='quantitative' />
      <column datatype='real' name='[JUN]' role='measure' type='quantitative' />
      <column datatype='real' name='[MAR]' role='measure' type='quantitative' />
      <column datatype='real' name='[MAY]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOV]' role='measure' type='quantitative' />
      <column datatype='real' name='[OCT]' role='measure' type='quantitative' />
      <column datatype='real' name='[SEP]' role='measure' type='quantitative' />
      <column datatype='string' name='[ShapeFile State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
          <bin default-name='false' value='&quot;Central India&quot;'>
            <value>&quot;Chhattisgarh&quot;</value>
            <value>&quot;East Madhya Pradesh&quot;</value>
            <value>&quot;Lakshadweep&quot;</value>
            <value>&quot;Madhya Maharashtra&quot;</value>
            <value>&quot;Matathwada&quot;</value>
            <value>&quot;Orissa&quot;</value>
            <value>&quot;Vidarbha&quot;</value>
            <value>&quot;West Madhya Pradesh&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North East&quot;'>
            <value>&quot;Arunachal Pradesh&quot;</value>
            <value>&quot;Assam &amp; Meghalaya&quot;</value>
            <value>&quot;Naga Mani Mizo Tripura&quot;</value>
            <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North India&quot;'>
            <value>&quot;Bihar&quot;</value>
            <value>&quot;East Rajasthan&quot;</value>
            <value>&quot;East Uttar Pradesh&quot;</value>
            <value>&quot;Gangetic West Bengal&quot;</value>
            <value>&quot;Gujarat Region&quot;</value>
            <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
            <value>&quot;Himachal Pradesh&quot;</value>
            <value>&quot;Jammu &amp; Kashmir&quot;</value>
            <value>&quot;Jharkhand&quot;</value>
            <value>&quot;Punjab&quot;</value>
            <value>&quot;Saurashtra &amp; Kutch&quot;</value>
            <value>&quot;Uttarakhand&quot;</value>
            <value>&quot;West Rajasthan&quot;</value>
            <value>&quot;West Uttar Pradesh&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South India&quot;'>
            <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
            <value>&quot;Coastal Andhra Pradesh&quot;</value>
            <value>&quot;Coastal Karnataka&quot;</value>
            <value>&quot;Kerala&quot;</value>
            <value>&quot;Konkan &amp; Goa&quot;</value>
            <value>&quot;North Interior Karnataka&quot;</value>
            <value>&quot;Rayalseema&quot;</value>
            <value>&quot;South Interior Karnataka&quot;</value>
            <value>&quot;Tamil Nadu&quot;</value>
            <value>&quot;Telangana&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_data3.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ANNUAL]' derivation='Avg' name='[avg:ANNUAL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[APR]' derivation='Avg' name='[avg:APR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AUG]' derivation='Avg' name='[avg:AUG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEC]' derivation='Avg' name='[avg:DEC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FEB]' derivation='Avg' name='[avg:FEB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JAN]' derivation='Avg' name='[avg:JAN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JUL]' derivation='Avg' name='[avg:JUL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JUN]' derivation='Avg' name='[avg:JUN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAR]' derivation='Avg' name='[avg:MAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAY]' derivation='Avg' name='[avg:MAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOV]' derivation='Avg' name='[avg:NOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OCT]' derivation='Avg' name='[avg:OCT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SEP]' derivation='Avg' name='[avg:SEP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
      <column-instance column='[APR]' derivation='Sum' name='[sum:APR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AUG]' derivation='Sum' name='[sum:AUG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEC]' derivation='Sum' name='[sum:DEC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FEB]' derivation='Sum' name='[sum:FEB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JAN]' derivation='Sum' name='[sum:JAN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JUL]' derivation='Sum' name='[sum:JUL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JUN]' derivation='Sum' name='[sum:JUN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAR]' derivation='Sum' name='[sum:MAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAY]' derivation='Sum' name='[sum:MAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOV]' derivation='Sum' name='[sum:NOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OCT]' derivation='Sum' name='[sum:OCT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SEP]' derivation='Sum' name='[sum:SEP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unnamed: 0]' derivation='Sum' name='[sum:Unnamed: 0:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Regions,States/UTs)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[States/UTs (group)]' />
          <groupfilter function='level-members' level='[none:States/UTs:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Pr, ShapeFile State'>
          <field>[ShapeFile State]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Ronit Kumar Purohit/OneDrive - iitkgp.ac.in/Documents/My Tableau Repository/Datasources/cleaned_data3.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/28/2023 11:04:11 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='cleaned_data3' increment-value='%null%' refresh-type='create' rows-inserted='4187' timestamp-start='2023-06-28 11:04:10.408' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unnamed: 0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4187</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States/UTs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States/UTs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States/UTs</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>JAN</remote-name>
              <remote-type>5</remote-type>
              <local-name>[JAN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>JAN</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>649</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FEB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[FEB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FEB</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>678</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MAR</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MAR</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>737</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>APR</remote-name>
              <remote-type>5</remote-type>
              <local-name>[APR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>APR</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>900</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MAY</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MAY</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1225</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>JUN</remote-name>
              <remote-type>5</remote-type>
              <local-name>[JUN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>JUN</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1885</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>JUL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[JUL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>JUL</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AUG</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AUG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AUG</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1950</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SEP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SEP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SEP</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1841</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OCT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OCT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OCT</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1427</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOV</remote-name>
              <remote-type>5</remote-type>
              <local-name>[NOV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOV</remote-alias>
              <ordinal>13</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>883</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEC</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DEC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEC</remote-alias>
              <ordinal>14</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>630</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ANNUAL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ANNUAL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ANNUAL</remote-alias>
              <ordinal>15</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2486</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShapeFile State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ShapeFile State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShapeFile State</remote-alias>
              <ordinal>16</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual_Rainfall</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Annual_Rainfall]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual_Rainfall</remote-alias>
              <ordinal>17</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2900</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rain_Deficit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rain_Deficit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rain_Deficit</remote-alias>
              <ordinal>18</ordinal>
              <family>cleaned_data3.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[States/UTs (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:MAR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[none:APR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:APR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:Unnamed: 0:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:FEB:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:SEP:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:MAY:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:JAN:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[none:AUG:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:AUG:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:JUL:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[__tableau_internal_object_id__].[cnt:cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:NOV:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:JUN:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[cnt:ANNUAL:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[ctd:ANNUAL:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:ANNUAL:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:OCT:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[none:DEC:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[sum:DEC:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Unnamed: 0' />
        <field-sort-custom-order field='States/UTs' />
        <field-sort-custom-order field='YEAR' />
        <field-sort-custom-order field='Calculation_1112389149818568710' />
        <field-sort-custom-order field='JAN' />
        <field-sort-custom-order field='FEB' />
        <field-sort-custom-order field='MAR' />
        <field-sort-custom-order field='APR' />
        <field-sort-custom-order field='MAY' />
        <field-sort-custom-order field='JUN' />
        <field-sort-custom-order field='JUL' />
        <field-sort-custom-order field='AUG' />
        <field-sort-custom-order field='SEP' />
        <field-sort-custom-order field='OCT' />
        <field-sort-custom-order field='NOV' />
        <field-sort-custom-order field='DEC' />
        <field-sort-custom-order field='ANNUAL' />
        <field-sort-custom-order field='Calculation_1112389149791563777' />
        <field-sort-custom-order field='Calculation_1112389149791858690' />
        <field-sort-custom-order field='Calculation_1112389149791944707' />
        <field-sort-custom-order field='Calculation_1112389149792043012' />
        <field-sort-custom-order field='Calculation_1112389149792194565' />
        <field-sort-custom-order field='States/UTs (group)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_data3.csv' id='cleaned_data3.csv_3BBE3CFDE328412796BBF0E85C3FF092'>
            <properties context=''>
              <relation connection='textscan.1jklqio1tj55tu1acgdl90gq22j0' name='cleaned_data3.csv' table='[C:\Users\Ronit Kumar Purohit\OneDrive - iitkgp.ac.in\Desktop\Certifications\Untitled Folder\cleaned_data3#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:Q4188:no:A1:Q4188:1' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Unnamed: 0' ordinal='0' />
                  <column datatype='string' name='States/UTs' ordinal='1' />
                  <column datatype='integer' name='YEAR' ordinal='2' />
                  <column datatype='real' name='JAN' ordinal='3' />
                  <column datatype='real' name='FEB' ordinal='4' />
                  <column datatype='real' name='MAR' ordinal='5' />
                  <column datatype='real' name='APR' ordinal='6' />
                  <column datatype='real' name='MAY' ordinal='7' />
                  <column datatype='real' name='JUN' ordinal='8' />
                  <column datatype='real' name='JUL' ordinal='9' />
                  <column datatype='real' name='AUG' ordinal='10' />
                  <column datatype='real' name='SEP' ordinal='11' />
                  <column datatype='real' name='OCT' ordinal='12' />
                  <column datatype='real' name='NOV' ordinal='13' />
                  <column datatype='real' name='DEC' ordinal='14' />
                  <column datatype='real' name='ANNUAL' ordinal='15' />
                  <column datatype='string' name='ShapeFile State' ordinal='16' />
                  <column datatype='real' name='Annual_Rainfall' ordinal='17' />
                  <column datatype='real' name='Rain_Deficit' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Annual Rainfall by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[ANNUAL]' derivation='Avg' name='[avg:ANNUAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[States/UTs (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' included-values='in-range'>
            <min>1146.5027777777777</min>
            <max>1717.0805555555555</max>
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' value='Annual Rainfall in mm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' />
              <color column='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' />
              <text column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{36564550-6E1B-487A-99E3-CA5101B89020}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
            <column caption='TOTAL RAIN' datatype='real' name='[Calculation_1806787917396619268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ANNUAL])' />
            </column>
            <column datatype='string' name='[ShapeFile State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[ShapeFile State]' derivation='None' name='[none:ShapeFile State:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1806787917396619268]' derivation='User' name='[usr:Calculation_1806787917396619268:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]'>
            <groupfilter function='level-members' level='[States/UTs (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.028d02108d459a1g752q707z74im].[Longitude (generated)]' field-type='quantitative' max='13876439.824107118' min='4369235.5697452659' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.028d02108d459a1g752q707z74im].[Latitude (generated)]' field-type='quantitative' max='4570955.0969980182' min='703194.88586278248' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1500.6330924599999' field='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' palette='orange_blue_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.028d02108d459a1g752q707z74im].[none:ShapeFile State:nk]' />
              <color column='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' />
              <geometry column='[federated.028d02108d459a1g752q707z74im].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[Latitude (generated)]</rows>
        <cols>[federated.028d02108d459a1g752q707z74im].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{798AAB43-A69E-4580-ABB6-C7669B741DF7}' />
    </worksheet>
    <worksheet name='Monthly Average Rainfall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column datatype='real' name='[APR]' role='measure' type='quantitative' />
            <column datatype='real' name='[AUG]' role='measure' type='quantitative' />
            <column datatype='real' name='[DEC]' role='measure' type='quantitative' />
            <column datatype='real' name='[FEB]' role='measure' type='quantitative' />
            <column datatype='real' name='[JAN]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUL]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUN]' role='measure' type='quantitative' />
            <column datatype='real' name='[MAR]' role='measure' type='quantitative' />
            <column datatype='real' name='[MAY]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOV]' role='measure' type='quantitative' />
            <column datatype='real' name='[OCT]' role='measure' type='quantitative' />
            <column datatype='real' name='[SEP]' role='measure' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[APR]' derivation='Avg' name='[avg:APR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AUG]' derivation='Avg' name='[avg:AUG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEC]' derivation='Avg' name='[avg:DEC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FEB]' derivation='Avg' name='[avg:FEB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JAN]' derivation='Avg' name='[avg:JAN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JUL]' derivation='Avg' name='[avg:JUL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JUN]' derivation='Avg' name='[avg:JUN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAR]' derivation='Avg' name='[avg:MAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAY]' derivation='Avg' name='[avg:MAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOV]' derivation='Avg' name='[avg:NOV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OCT]' derivation='Avg' name='[avg:OCT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SEP]' derivation='Avg' name='[avg:SEP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='4'>
            <groupfilter function='member' level='[States/UTs (group)]' member='&quot;Central India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[:Measure Names]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' value='21' />
            <format attr='title' class='0' field='[federated.028d02108d459a1g752q707z74im].[Multiple Values]' scope='rows' value='Avg. Rainfall in mm' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[Multiple Values]</rows>
        <cols>[federated.028d02108d459a1g752q707z74im].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B965151E-B517-4A8E-B4D0-8641A55DB412}' />
    </worksheet>
    <worksheet name='Monthly Rainfall Distribution by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column datatype='real' name='[APR]' role='measure' type='quantitative' />
            <column datatype='real' name='[AUG]' role='measure' type='quantitative' />
            <column datatype='real' name='[DEC]' role='measure' type='quantitative' />
            <column datatype='real' name='[FEB]' role='measure' type='quantitative' />
            <column datatype='real' name='[JAN]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUL]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUN]' role='measure' type='quantitative' />
            <column datatype='real' name='[MAR]' role='measure' type='quantitative' />
            <column datatype='real' name='[MAY]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOV]' role='measure' type='quantitative' />
            <column datatype='real' name='[OCT]' role='measure' type='quantitative' />
            <column datatype='real' name='[SEP]' role='measure' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[APR]' derivation='Avg' name='[avg:APR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AUG]' derivation='Avg' name='[avg:AUG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEC]' derivation='Avg' name='[avg:DEC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FEB]' derivation='Avg' name='[avg:FEB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JAN]' derivation='Avg' name='[avg:JAN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JUL]' derivation='Avg' name='[avg:JUL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JUN]' derivation='Avg' name='[avg:JUN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAR]' derivation='Avg' name='[avg:MAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAY]' derivation='Avg' name='[avg:MAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOV]' derivation='Avg' name='[avg:NOV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OCT]' derivation='Avg' name='[avg:OCT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SEP]' derivation='Avg' name='[avg:SEP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JAN:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:FEB:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAR:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:APR:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:MAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUN:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:JUL:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:AUG:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:SEP:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:OCT:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:NOV:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[avg:DEC:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='4'>
            <groupfilter function='member' level='[States/UTs (group)]' member='&quot;Central India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[:Measure Names]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.028d02108d459a1g752q707z74im].[Multiple Values]' scope='rows' value='Avg. Rainfall in mm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[Multiple Values]</rows>
        <cols>([federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk] / [federated.028d02108d459a1g752q707z74im].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E531DB43-B3D8-4B58-A6B5-0CA7DA477829}' />
    </worksheet>
    <worksheet name='Rainfall Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>Annual Rainfall HeatMap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
            <column caption='TOTAL RAIN' datatype='real' name='[Calculation_1806787917396619268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ANNUAL])' />
            </column>
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1806787917396619268]' derivation='User' name='[usr:Calculation_1806787917396619268:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[Exclusions (Regions,States/UTs)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[States/UTs (group)]' />
                <groupfilter function='level-members' level='[none:States/UTs:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[States/UTs (group)]' member='&quot;Central India&quot;' />
                <groupfilter function='member' level='[none:States/UTs:nk]' member='&quot;Lakshadweep&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;South India&quot;</bucket>
              <bucket>&quot;North India&quot;</bucket>
              <bucket>&quot;North East&quot;</bucket>
              <bucket>&quot;Central India&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[Exclusions (Regions,States/UTs)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' value='TOTAL RAIN in mm'>
              <formatted-text>
                <run>TOTAL RAIN in mm</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' />
              <color column='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' />
              <text column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' />
              <text column='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' />
              <text column='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]>]]></run>
                <run>Ã†&#10;</run>
                <run><![CDATA[<[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run><![CDATA[<[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='auto' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Bahnschrift Light' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BC127AF9-B78F-4040-89DB-DD0BCE7054A2}' />
    </worksheet>
    <worksheet name='Region-Wise Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[ANNUAL]' derivation='Avg' name='[avg:ANNUAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[States/UTs (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' direction='ASC' using='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' />
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' value='Region'>
              <formatted-text>
                <run fontname='Bahnschrift Light' fontsize='11'>Region</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]</rows>
        <cols>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{251E1861-7E3E-4CA3-B7AB-54BEF8CDD348}' />
    </worksheet>
    <worksheet name='Region-wise Scatter Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[ANNUAL]' derivation='None' name='[none:ANNUAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[States/UTs (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]' included-values='in-range'>
            <min>62.200000000000003</min>
            <max>6331.1000000000004</max>
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]' scope='rows' value='Total Annual Rainfall' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' />
              <lod column='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]</rows>
        <cols>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{A4AB56F7-25C8-49F9-B74E-97771038AE16}' />
    </worksheet>
    <worksheet name='Season-Wise Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift SemiBold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
          </datasources>
          <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
            <column datatype='real' name='[APR]' role='measure' type='quantitative' />
            <column datatype='real' name='[AUG]' role='measure' type='quantitative' />
            <column caption='Winter' datatype='real' name='[Calculation_1112389149791563777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([JAN]+[DEC])' />
            </column>
            <column caption='Spring' datatype='real' name='[Calculation_1112389149791858690]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([FEB]+[MAR])' />
            </column>
            <column caption='Summer' datatype='real' name='[Calculation_1112389149791944707]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG ([APR]+[JUN])' />
            </column>
            <column caption='Monsoon' datatype='real' name='[Calculation_1112389149792043012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([JUL]+[AUG])' />
            </column>
            <column caption='Autumn' datatype='real' name='[Calculation_1112389149792194565]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([SEP]+[OCT]+[NOV])' />
            </column>
            <column datatype='real' name='[DEC]' role='measure' type='quantitative' />
            <column datatype='real' name='[FEB]' role='measure' type='quantitative' />
            <column datatype='real' name='[JAN]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUL]' role='measure' type='quantitative' />
            <column datatype='real' name='[JUN]' role='measure' type='quantitative' />
            <column datatype='real' name='[MAR]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOV]' role='measure' type='quantitative' />
            <column datatype='real' name='[OCT]' role='measure' type='quantitative' />
            <column datatype='real' name='[SEP]' role='measure' type='quantitative' />
            <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
                <bin default-name='false' value='&quot;Central India&quot;'>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;East Madhya Pradesh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Maharashtra&quot;</value>
                  <value>&quot;Matathwada&quot;</value>
                  <value>&quot;Orissa&quot;</value>
                  <value>&quot;Vidarbha&quot;</value>
                  <value>&quot;West Madhya Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North East&quot;'>
                  <value>&quot;Arunachal Pradesh&quot;</value>
                  <value>&quot;Assam &amp; Meghalaya&quot;</value>
                  <value>&quot;Naga Mani Mizo Tripura&quot;</value>
                  <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North India&quot;'>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;East Rajasthan&quot;</value>
                  <value>&quot;East Uttar Pradesh&quot;</value>
                  <value>&quot;Gangetic West Bengal&quot;</value>
                  <value>&quot;Gujarat Region&quot;</value>
                  <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu &amp; Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Saurashtra &amp; Kutch&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Rajasthan&quot;</value>
                  <value>&quot;West Uttar Pradesh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South India&quot;'>
                  <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
                  <value>&quot;Coastal Andhra Pradesh&quot;</value>
                  <value>&quot;Coastal Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Konkan &amp; Goa&quot;</value>
                  <value>&quot;North Interior Karnataka&quot;</value>
                  <value>&quot;Rayalseema&quot;</value>
                  <value>&quot;South Interior Karnataka&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112389149791563777]' derivation='User' name='[usr:Calculation_1112389149791563777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112389149791858690]' derivation='User' name='[usr:Calculation_1112389149791858690:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112389149791944707]' derivation='User' name='[usr:Calculation_1112389149791944707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112389149792043012]' derivation='User' name='[usr:Calculation_1112389149792043012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112389149792194565]' derivation='User' name='[usr:Calculation_1112389149792194565:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149792194565:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149792043012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791858690:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791944707:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791563777:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149792043012:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149792194565:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791944707:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791858690:qk]&quot;</bucket>
              <bucket>&quot;[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1112389149791563777:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' filter-group='4'>
            <groupfilter function='member' level='[States/UTs (group)]' member='&quot;Central India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:States/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1936</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[:Measure Names]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]</column>
            <column>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.028d02108d459a1g752q707z74im].[Multiple Values]' scope='rows' value='Avg. Rainfall in mm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.028d02108d459a1g752q707z74im].[Multiple Values]</rows>
        <cols>([federated.028d02108d459a1g752q707z74im].[:Measure Names] * [federated.028d02108d459a1g752q707z74im].[none:YEAR:qk])</cols>
      </table>
      <simple-id uuid='{7DA4F38B-941B-4235-9E5D-55D17F27E81C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Annual Rainfall Trends'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
      </datasources>
      <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
        <column aggregation='Sum' caption='Annual' datatype='real' name='[ANNUAL]' role='dimension' type='quantitative' />
        <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
            <bin default-name='false' value='&quot;Central India&quot;'>
              <value>&quot;Chhattisgarh&quot;</value>
              <value>&quot;East Madhya Pradesh&quot;</value>
              <value>&quot;Lakshadweep&quot;</value>
              <value>&quot;Madhya Maharashtra&quot;</value>
              <value>&quot;Matathwada&quot;</value>
              <value>&quot;Orissa&quot;</value>
              <value>&quot;Vidarbha&quot;</value>
              <value>&quot;West Madhya Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North East&quot;'>
              <value>&quot;Arunachal Pradesh&quot;</value>
              <value>&quot;Assam &amp; Meghalaya&quot;</value>
              <value>&quot;Naga Mani Mizo Tripura&quot;</value>
              <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North India&quot;'>
              <value>&quot;Bihar&quot;</value>
              <value>&quot;East Rajasthan&quot;</value>
              <value>&quot;East Uttar Pradesh&quot;</value>
              <value>&quot;Gangetic West Bengal&quot;</value>
              <value>&quot;Gujarat Region&quot;</value>
              <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
              <value>&quot;Himachal Pradesh&quot;</value>
              <value>&quot;Jammu &amp; Kashmir&quot;</value>
              <value>&quot;Jharkhand&quot;</value>
              <value>&quot;Punjab&quot;</value>
              <value>&quot;Saurashtra &amp; Kutch&quot;</value>
              <value>&quot;Uttarakhand&quot;</value>
              <value>&quot;West Rajasthan&quot;</value>
              <value>&quot;West Uttar Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South India&quot;'>
              <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
              <value>&quot;Coastal Andhra Pradesh&quot;</value>
              <value>&quot;Coastal Karnataka&quot;</value>
              <value>&quot;Kerala&quot;</value>
              <value>&quot;Konkan &amp; Goa&quot;</value>
              <value>&quot;North Interior Karnataka&quot;</value>
              <value>&quot;Rayalseema&quot;</value>
              <value>&quot;South Interior Karnataka&quot;</value>
              <value>&quot;Tamil Nadu&quot;</value>
              <value>&quot;Telangana&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
        <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
        <column-instance column='[ANNUAL]' derivation='Avg' name='[avg:ANNUAL:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ANNUAL]' derivation='None' name='[none:ANNUAL:qk]' pivot='key' type='quantitative' />
        <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='89702' x='468' y='893'>
              <zone h='49107' id='11' name='Annual Rainfall by Year' w='44851' x='468' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98214' id='14' name='Region-Wise Trend' w='44851' x='45319' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49107' id='19' name='Region-wise Scatter Map' w='44851' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98214' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='893'>
              <zone h='7255' id='12' name='Annual Rainfall by Year' param='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7255' id='15' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='8148'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13393' id='16' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='15403'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11384' id='17' name='Region-Wise Trend' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='color' w='9362' x='90170' y='28796'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5357' id='18' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='highlighter' w='9362' x='90170' y='40180'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7255' id='20' name='Region-wise Scatter Map' param='[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='45537'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='33' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone h='7255' id='12' name='Annual Rainfall by Year' param='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='11' is-fixed='true' name='Annual Rainfall by Year' w='44851' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='15' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='8148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13393' id='16' mode='checkdropdown' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='15403'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5357' id='18' name='Region-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='highlighter' w='9362' x='90170' y='40180'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98214' id='14' is-fixed='true' name='Region-Wise Trend' w='44851' x='45319' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11384' id='17' name='Region-Wise Trend' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='color' w='9362' x='90170' y='28796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='20' name='Region-wise Scatter Map' param='[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='45537'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='19' is-fixed='true' name='Region-wise Scatter Map' w='44851' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F080EE79-7CFD-4DEF-8CD2-7438DCBF3C2B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Chloropleth'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
      </datasources>
      <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
        <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
            <bin default-name='false' value='&quot;Central India&quot;'>
              <value>&quot;Chhattisgarh&quot;</value>
              <value>&quot;East Madhya Pradesh&quot;</value>
              <value>&quot;Lakshadweep&quot;</value>
              <value>&quot;Madhya Maharashtra&quot;</value>
              <value>&quot;Matathwada&quot;</value>
              <value>&quot;Orissa&quot;</value>
              <value>&quot;Vidarbha&quot;</value>
              <value>&quot;West Madhya Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North East&quot;'>
              <value>&quot;Arunachal Pradesh&quot;</value>
              <value>&quot;Assam &amp; Meghalaya&quot;</value>
              <value>&quot;Naga Mani Mizo Tripura&quot;</value>
              <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North India&quot;'>
              <value>&quot;Bihar&quot;</value>
              <value>&quot;East Rajasthan&quot;</value>
              <value>&quot;East Uttar Pradesh&quot;</value>
              <value>&quot;Gangetic West Bengal&quot;</value>
              <value>&quot;Gujarat Region&quot;</value>
              <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
              <value>&quot;Himachal Pradesh&quot;</value>
              <value>&quot;Jammu &amp; Kashmir&quot;</value>
              <value>&quot;Jharkhand&quot;</value>
              <value>&quot;Punjab&quot;</value>
              <value>&quot;Saurashtra &amp; Kutch&quot;</value>
              <value>&quot;Uttarakhand&quot;</value>
              <value>&quot;West Rajasthan&quot;</value>
              <value>&quot;West Uttar Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South India&quot;'>
              <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
              <value>&quot;Coastal Andhra Pradesh&quot;</value>
              <value>&quot;Coastal Karnataka&quot;</value>
              <value>&quot;Kerala&quot;</value>
              <value>&quot;Konkan &amp; Goa&quot;</value>
              <value>&quot;North Interior Karnataka&quot;</value>
              <value>&quot;Rayalseema&quot;</value>
              <value>&quot;South Interior Karnataka&quot;</value>
              <value>&quot;Tamil Nadu&quot;</value>
              <value>&quot;Telangana&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
        <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
        <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='74107' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='74107' id='5' type-v2='layout-basic' w='89702' x='468' y='893'>
              <zone h='74107' id='3' name='Map' w='89702' x='468' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='74107' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='893'>
              <zone h='7255' id='9' name='Map' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6362' id='10' name='Map' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' type-v2='color' w='9362' x='90170' y='8148'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13170' id='13' type-v2='layout-flow' w='9362' x='90170' y='14510'>
                <zone h='13170' id='8' name='Map' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='14510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='24107' id='11' name='Rainfall Total' w='99064' x='468' y='75000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='24' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone h='7255' id='9' name='Map' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13170' id='8' mode='checkdropdown' name='Map' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='14510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74107' id='3' is-fixed='true' name='Map' w='89702' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6362' id='10' name='Map' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' type-v2='color' w='9362' x='90170' y='8148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='185' h='24107' id='11' is-fixed='true' name='Rainfall Total' w='99064' x='468' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8A3E45ED-835D-469F-9E03-4E9C22BFBC7F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='State-Wise Rainfall Trends'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='cleaned_data3' name='federated.028d02108d459a1g752q707z74im' />
      </datasources>
      <datasource-dependencies datasource='federated.028d02108d459a1g752q707z74im'>
        <column caption='Regions' datatype='string' name='[States/UTs (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[States/UTs]' new-bin='true'>
            <bin default-name='false' value='&quot;Central India&quot;'>
              <value>&quot;Chhattisgarh&quot;</value>
              <value>&quot;East Madhya Pradesh&quot;</value>
              <value>&quot;Lakshadweep&quot;</value>
              <value>&quot;Madhya Maharashtra&quot;</value>
              <value>&quot;Matathwada&quot;</value>
              <value>&quot;Orissa&quot;</value>
              <value>&quot;Vidarbha&quot;</value>
              <value>&quot;West Madhya Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North East&quot;'>
              <value>&quot;Arunachal Pradesh&quot;</value>
              <value>&quot;Assam &amp; Meghalaya&quot;</value>
              <value>&quot;Naga Mani Mizo Tripura&quot;</value>
              <value>&quot;Sub Himalayan West Bengal &amp; Sikkim&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North India&quot;'>
              <value>&quot;Bihar&quot;</value>
              <value>&quot;East Rajasthan&quot;</value>
              <value>&quot;East Uttar Pradesh&quot;</value>
              <value>&quot;Gangetic West Bengal&quot;</value>
              <value>&quot;Gujarat Region&quot;</value>
              <value>&quot;Haryana Delhi &amp; Chandigarh&quot;</value>
              <value>&quot;Himachal Pradesh&quot;</value>
              <value>&quot;Jammu &amp; Kashmir&quot;</value>
              <value>&quot;Jharkhand&quot;</value>
              <value>&quot;Punjab&quot;</value>
              <value>&quot;Saurashtra &amp; Kutch&quot;</value>
              <value>&quot;Uttarakhand&quot;</value>
              <value>&quot;West Rajasthan&quot;</value>
              <value>&quot;West Uttar Pradesh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South India&quot;'>
              <value>&quot;Andaman &amp; Nicobar Islands&quot;</value>
              <value>&quot;Coastal Andhra Pradesh&quot;</value>
              <value>&quot;Coastal Karnataka&quot;</value>
              <value>&quot;Kerala&quot;</value>
              <value>&quot;Konkan &amp; Goa&quot;</value>
              <value>&quot;North Interior Karnataka&quot;</value>
              <value>&quot;Rayalseema&quot;</value>
              <value>&quot;South Interior Karnataka&quot;</value>
              <value>&quot;Tamil Nadu&quot;</value>
              <value>&quot;Telangana&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[States/UTs]' role='dimension' type='nominal' />
        <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
        <column-instance column='[States/UTs]' derivation='None' name='[none:States/UTs:nk]' pivot='key' type='nominal' />
        <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='89702' x='468' y='893'>
              <zone h='49107' id='3' name='Monthly Average Rainfall' w='44850' x='468' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98214' id='11' name='Monthly Rainfall Distribution by State' w='44852' x='45318' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49107' id='15' name='Season-Wise Trend' w='44850' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98214' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='893'>
              <zone h='7255' id='8' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13170' id='9' mode='radiolist' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='8148'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5357' id='10' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='highlighter' w='9362' x='90170' y='21318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5357' id='13' mode='checkdropdown' name='Monthly Rainfall Distribution by State' param='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' type-v2='filter' w='9362' x='90170' y='26675'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29241' id='14' name='Monthly Rainfall Distribution by State' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='color' w='9362' x='90170' y='32032'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5357' id='16' name='Season-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='highlighter' w='9362' x='90170' y='61273'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='29' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone h='7255' id='8' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9362' x='90170' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13170' id='9' mode='dropdown' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type-v2='filter' w='9362' x='90170' y='8148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5357' id='10' name='Monthly Average Rainfall' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='highlighter' w='9362' x='90170' y='21318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='3' is-fixed='true' name='Monthly Average Rainfall' w='44850' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5357' id='13' mode='checkdropdown' name='Monthly Rainfall Distribution by State' param='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' type-v2='filter' w='9362' x='90170' y='26675'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98214' id='11' is-fixed='true' name='Monthly Rainfall Distribution by State' w='44852' x='45318' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29241' id='14' name='Monthly Rainfall Distribution by State' pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='color' w='9362' x='90170' y='32032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5357' id='16' name='Season-Wise Trend' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type-v2='highlighter' w='9362' x='90170' y='61273'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='15' is-fixed='true' name='Season-Wise Trend' w='44850' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A032F818-9420-4DE5-B5B4-7CC415181557}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1' param='vert' removable='false' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='2053' id='3' type-v2='title' w='99032' x='484' y='684' />
            <zone h='8640' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99032' x='484' y='2737' />
            <zone h='87939' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99032' x='484' y='11377'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Annual Rainfall' captured-sheet='Annual Rainfall Trends' id='1' />
                  <story-point caption='Monthly and Season' captured-sheet='State-Wise Rainfall Trends' id='2' />
                  <story-point caption='Rainfall Distribution' captured-sheet='Chloropleth' id='3'>
                    <capturedDeltas>
                      <worksheet name='Map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.028d02108d459a1g752q707z74im].[Latitude (generated)]' field-type='quantitative' max='4517618.2844165005' min='716502.43910948175' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.028d02108d459a1g752q707z74im].[Longitude (generated)]' field-type='quantitative' max='12659667.128500823' min='4988804.1128909616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D6845D29-0EE9-4875-BBBB-A673A6DE2A46}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Annual Rainfall by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[avg:ANNUAL:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{34D8FBC0-4A92-495B-8397-852807915F46}' />
    </window>
    <window class='worksheet' name='Region-Wise Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='color' />
            <card param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{203FCD28-7634-4853-8DD0-89FD91C54F75}' />
    </window>
    <window class='worksheet' name='Monthly Average Rainfall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='filter' />
            <card param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FE9A54AB-ACE2-4284-8921-F3307F7079CA}' />
    </window>
    <window class='worksheet' name='Monthly Rainfall Distribution by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4E4DE0E1-1C85-4C08-8797-C019A070338D}' />
    </window>
    <window class='worksheet' name='Season-Wise Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E209F2BA-B95B-4AC2-85AE-32F16CB74D52}' />
    </window>
    <window class='worksheet' name='Region-wise Scatter Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2A6D3365-A5B9-4E67-8F12-71DA10DBE807}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]' type='filter' />
            <card param='[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.028d02108d459a1g752q707z74im].[States/UTs (group)]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:ANNUAL:qk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:Calculation_1806787917396156416:qk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:Calculation_1806787917396185089:qk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:Calculation_1806787917396217859:qk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:ShapeFile State:nk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[none:YEAR:qk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CA728C4-75F5-4A35-A244-4E5C71F133C5}' />
    </window>
    <window class='worksheet' name='Rainfall Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.028d02108d459a1g752q707z74im].[none:States/UTs:nk]</field>
            <field>[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01CC7417-89E7-42CF-9ACE-76C3B713098B}' />
    </window>
    <window class='dashboard' name='Annual Rainfall Trends'>
      <viewpoints>
        <viewpoint name='Annual Rainfall by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region-Wise Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region-wise Scatter Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{EDABD7D3-44B3-4D45-853B-040E61846915}' />
    </window>
    <window class='dashboard' name='State-Wise Rainfall Trends'>
      <viewpoints>
        <viewpoint name='Monthly Average Rainfall'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Rainfall Distribution by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Season-Wise Trend'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{BA23C442-5708-4698-A8BE-762272B0B0A7}' />
    </window>
    <window class='dashboard' name='Chloropleth'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rainfall Total'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.028d02108d459a1g752q707z74im].[usr:Calculation_1806787917396619268:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{607E17BB-965A-491D-BA87-632425C9C211}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{4CA45F74-9CF7-4970-83E2-3640619F2BF6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Rainfall Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Rainfall by Year' width='192'>
      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
      r4TpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chloropleth' width='192'>
      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
      Bz7sLNztXXgYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly Average Rainfall' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly Rainfall Distribution by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rainfall Total' width='192'>
      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
      AjIBZJxr/n8v+5Ze9OuQvQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region-Wise Trend' width='192'>
      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
      57tLL/kJKv/dLDisisAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region-wise Scatter Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State-Wise Rainfall Trends' width='192'>
      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
      rKsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      /4kdaxNrJlSnAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
